# NOTE
#
# If run tmux When First shell start up, write the following statement.
#   if [ $SHLVL = 1 ]; then
#     tmux
#   fi
#
# Key-bindings
#   prefix ?    list key bindings
#   prefix d    detach client
#   prefix $    rename session
#   prefix s    list sessions
#   prefix w    list windows
#   prefix <n>  open window specified <n>
#
# Commands
#  Show sessions
#   $ tmux ls
#  Create session
#   $ tmux new -s <session name>
#  Rename session
#   $ tmux rename -t <from session name> <to session name>
#  Attach to session. If omit in [], attach to latest session.
#   $ tmux a [-t <session name>]
#  Kill session
#   $ tmux kill-session -t <session name>
#  Kill all sessions
#   $ tmux kill-server
#

#----------------------------------------
# General
#----------------------------------------

# Reload configuration
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded config !!"

# [prefix] key
unbind-key C-b
set-option -g prefix C-q
bind-key C-q send-prefix

# Reduce key stroke delay.(Maybe ESC become good response)
set -sg escape-time 1
# set -s escape-time 0

# Messagge display time
set-option -g display-time 1500
set-option -g display-panes-time 1500

# 256 color
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

set-option -g mouse on
# bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind-key -n WheelDownPane select-pane -t= \; send-keys -M

#----------------------------------------
# Status Line
#----------------------------------------

# Status line - Drawing interval of Status-bar
set-option -g status-interval 1

# Status line - color
set-option -g status-fg "colour255"
set-option -g status-bg "colour238"

# Status line - maximum length(default left=10/right=40)
set-option -g status-left-length 30
set-option -g status-right-length 60

# Status left format
# set-option -g status-left "#[fg=colour255,bg=colour241]Session: #S #[default]"
# set-option -g status-left "#[fg=colour255,bg=colour232]Session: #S #[default]"
# set-option -g status-left "#[fg=colour255,bg=colour127]Session: #S #[default]"
set-option -g status-left "#[fg=colour21,bg=colour255]Session: #S #[default]"

# Status right format
# set-option -g status-right "#[fg=colour232,bg=colour196,bold] #h | %m/%d %H:%M:%S#[default]"
# set-option -g status-right "#[fg=colour225,bg=colour127,bold] #h | %m/%d %H:%M:%S#[default]"
# set-option -g status-right "#[fg=colour255,bg=colour241] #h | %m/%d %H:%M:%S#[default]"
set-option -g status-right "#[fg=colour255,bg=colour196] #h | %m/%d %H:%M:%S#[default]"
# set-option -g status-right "#[fg=colour160,bg=colour255,bold] #h | %m/%d %H:%M:%S#[default]"

# Status window format
set-window-option -g window-status-format " #I: #W"
set-window-option -g window-status-current-format "#[fg=colour255,bg=colour33,bold] #I: #W #[default]"
# set-window-option -g window-status-current-format "#[fg=colour255,bg=colour27,bold] #I: #W #[default]"

#----------------------------------------
# Window
#----------------------------------------

# Number origin
set-option -g base-index 1

# Create new window
bind-key -n M-t new-window

# Rename window
bind-key -n M-T command-prompt -I "#W" "rename-window %%"

# Close window
bind-key q confirm-before 'kill-window'
# bind-key -n M-Q confirm-before 'kill-window'

# Move to next window
bind-key -n M-n next-window

# Move to previour window
bind-key -n M-p previous-window

#----------------------------------------
# Pane
#----------------------------------------

# Number origin
set-window-option -g pane-base-index 1

# Split pane vertical
bind-key -n M-v split-window -h

# Split pane horizontal
bind-key -n M-s split-window -v

# Move pane
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

# Rotate pane
bind-key -n M-o select-pane -t :.+

# Close pane
bind-key -n M-q confirm-before 'kill-pane'
bind-key -n M-Q kill-pane

# Resize pane
bind-key -n M-Up    resize-pane -U 2
bind-key -n M-Down  resize-pane -D 2
bind-key -n M-Left  resize-pane -L 5
bind-key -n M-Right resize-pane -R 5
# bind-key -n M-H resize-pane -L 2
# bind-key -n M-J resize-pane -D 2
# bind-key -n M-K resize-pane -U 5
# bind-key -n M-L resize-pane -R 5

# Change pane to window
bind-key -n M-o break-pane

# Move pane to previous.
bind-key -n M-w swap-pane -U

# Move pane to next
bind-key -n M-W swap-pane -D

#----------------------------------------
# cf. vim friendly tmux configuration.
#   https://gist.github.com/anonymous/6bebae3eb9f7b972e6f0
#----------------------------------------

# Use vim key bind on copy mode
# set-window-option -g mode-keys vi

# Start selection
# bind-key -T copy-mode-vi v send -X begin-selection

# Select line
# bind-key -T copy-mode-vi V send -X select-line

# Start rectangle selection
# bind-key -T copy-mode-vi C-v send -X rectangle-toggle

# Yank
# bind-key -T copy-mode-vi y send -X copy-selection

# Yank line
# bind-key -T copy-mode-vi Y send -X copy-line

# Paste
# bind-key C-p paste-buffer

